import os
from pathlib import Path
import pandas as pd
import geopandas as gpd
from shapely.geometry import shape
from tqdm import tqdm

from config import RGIS_CRS_FILE

DUMP_RYD = Path("dump_ryd")
DUMP_OAS = Path("dump_id")
OUTPUT_MAP = "map_oas_buildings.html"

def load_dumps(dump_path: Path, label: str) -> pd.DataFrame:
    df_list = []
    for file in dump_path.glob("*.pickle"):
        df = pd.read_pickle(file)
        df = df[df["idrgis"].notna()].copy()
        df["–¢–∏–ø"] = label
        df_list.append(df)
    return pd.concat(df_list, ignore_index=True) if df_list else pd.DataFrame()

def to_geodataframe(df: pd.DataFrame) -> gpd.GeoDataFrame:
    geoms = []
    ids = []

    for _, row in tqdm(df.iterrows(), total=len(df), desc="–°–æ–∑–¥–∞–Ω–∏–µ GeoDataFrame"):
        features = row.get("coord_info", {}).get("features", [])
        for feature in features:
            try:
                geom = shape(feature["geometry"])
                geoms.append(geom)
                ids.append(row["idrgis"])
            except Exception:
                continue

    gdf = gpd.GeoDataFrame(geometry=geoms)
    gdf["idrgis"] = ids
    return gdf

def build_map():
    print("üîπ –ó–∞–≥—Ä—É–∂–∞–µ–º —Ä—è–¥–æ–≤—ã–µ...")
    df1 = load_dumps(DUMP_RYD, label="–†—è–¥–æ–≤—ã–µ —Å—Ä–µ–¥–æ–≤—ã–µ")
    print("üîπ –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ä–µ–¥–æ–≤—ã–µ...")
    df2 = load_dumps(DUMP_OAS, label="–¶–µ–Ω–Ω—ã–µ —Å—Ä–µ–¥–æ–≤—ã–µ")

    df_all = pd.concat([df1, df2], ignore_index=True)
    gdf_geom = to_geodataframe(df_all)

    gdf_full = gdf_geom.merge(df_all, on="idrgis", how="right")

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–∏—Å—Ç–µ–º—É –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
    with open(RGIS_CRS_FILE, encoding="utf-8") as f:
        wkt = f.read()

    gdf_full = gdf_full.set_crs(wkt).to_crs("EPSG:4326")

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—É—é –∫–∞—Ä—Ç—É
    m = gdf_full.explore(column="–¢–∏–ø", tooltip=["–¢–∏–ø"], cmap="Set2")
    m.save(OUTPUT_MAP)

    print(f"‚úÖ HTML-–∫–∞—Ä—Ç–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤: {OUTPUT_MAP}")

if __name__ == "__main__":
    build_map()
